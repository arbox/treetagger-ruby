= TreeTagger for Ruby

* {RubyGems}[http://rubygems.org/gems/treetagger-ruby]
* {Homepage}[http://bu.chsta.be/]
* {RTT Project Page}[http://bu.chsta.be/projects/treetagger-ruby/]
* {Source Code}[https://github.com/arbox/treetagger-ruby]
* {Bug Tracker}[https://github.com/arbox/treetagger-ruby/issues]

== DESCRIPTION
A Ruby based wrapper for the TreeTagger by Helmut Schmid.

Check it out if you are interested in Natural Language Processing (NLP)
and/or Human Language Technology (HLT).

This library provides comprehensive bindings for the
{TreeTagger}[http://www.ims.uni-stuttgart.de/projekte/corplex/TreeTagger/],
a statistical language independed POS tagging and chunking software.

TreeTagger is language agnostic, it will never guess what language you're going
to use.

TODO:
* References to Schmid's publications;
* How to use TreeTagger in the wild;
* Input and output format, tokenization;
* ...

=== Implemented Features
Simple tagging.

Please have a look at the CHANGELOG file for details on implemented and planned
features. 

== INSTALLATION
Before you install the <tt>treetagger-ruby</tt> package please ensure
you have downloaded and installed the
{TreeTagger}[http://www.ims.uni-stuttgart.de/projekte/corplex/TreeTagger/]
itself.

The {TreeTagger}[http://www.ims.uni-stuttgart.de/projekte/corplex/TreeTagger/]
is a copyrighted software by Helmut Schmid and
{IMS}[http://www.ims.uni-stuttgart.de/], please read the license
agreament before you download the TreeTagger package and language models.

After the installation of the <tt>TreeTagger</tt> set the environment variable
<tt>TREETAGGER_BINARY</tt> to the location where the binary <tt>tree-tagger</tt>
resides. Usually this binary is located under the <tt>bin</tt> directory in the
main installation directory of the <tt>TreeTagger</tt>.

Also you have to set the variable <tt>TREETAGGER_MODEL</tt> to the location of
the appropriate language model you have acquired in the training step.

For instance you may add the following lines to your <tt>.profile</tt> file:
  export TREETAGGER_BINARY='/path/to/your/TreeTagger/bin/tree-tagger'
  export TREETAGGER_MODEL='/path/to/your/TreeTagger/lib/german.par'

It is convinient to work with a default language model, but you can change
it every time during the instantiation of a new tagger instance.

If you want to feed a lexicon file into your tagger you can do it globally
through the environment variable <tt>TREETAGGER_LEXICON</tt>.

<tt>treetagger-ruby</tt> is provided as a .gem package. Simply install it via
{RubyGems}[http://rubygems.org/gems/treetagger-ruby].
To install <tt>treetagger-ruby</tt> issue the following command:
  $ gem install treetagger-ruby

If you want to do a system wide installation, do this as root
(possibly using +sudo+).

Alternatively use your Gemfile for dependency management.


== SYNOPSIS

Basic usage is very simple:
  $ require 'treetagger-ruby'
  $ # Instantiate a tagger instance with default values.
  $ tagger = TreeTagger::Tagger.new
  $ # Process an array of tokens.
  $ tagger.process(%w{Ich gehe in die Schule})
  $ # Flush the pipeline.
  $ tagger.flush
  $ # Get the processed data.
  $ tagger.get_output

See documentation in the TreeTagger::Tagger class for details
on particular methods.

== EXCEPTION HIERARCHY
While using TreeTagger you can face following errors:
* <tt>TreeTagger::UserError</tt>;
* <tt>TreeTagger::RuntimeError</tt>;
* <tt>TreeTagger::ExternalError</tt>.

== SUPPORT
If you have question, bug reports or any suggestions, please drop me an email :) 
Any help is deeply appreciated!

== CHANGELOG
For details on future plan and working progress see CHANGELOG.

== CAUTION
This library is <b>work in process</b>! Though the interface is mostly complete,
you might face some not implemented features.

Please contact me with your suggestions, bug reports and feature requests.
== LICENSE

RTT is a copyrighted software by Andrei Beliankou, 2011-

You may use, redistribute and change it under the terms
provided in the LICENSE file.

